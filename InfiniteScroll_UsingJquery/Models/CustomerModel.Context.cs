//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InfiniteScroll_UsingJquery.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CustomerDbEntities : DbContext
    {
        public CustomerDbEntities()
            : base("name=CustomerDbEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Customer> Customers { get; set; }
    
        public virtual ObjectResult<USP_GETCustomers_Result> USP_GETCustomers(Nullable<long> startFrom, Nullable<long> count)
        {
            var startFromParameter = startFrom.HasValue ?
                new ObjectParameter("StartFrom", startFrom) :
                new ObjectParameter("StartFrom", typeof(long));
    
            var countParameter = count.HasValue ?
                new ObjectParameter("Count", count) :
                new ObjectParameter("Count", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GETCustomers_Result>("USP_GETCustomers", startFromParameter, countParameter);
        }
    
        public virtual ObjectResult<USP_GETCustomer_Result> USP_GETCustomer(Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GETCustomer_Result>("USP_GETCustomer", pageNumberParameter, pageSizeParameter);
        }
    }
}
